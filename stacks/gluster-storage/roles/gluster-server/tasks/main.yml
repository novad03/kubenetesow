---
- name: create gluster kubenow yaml directory
  become: yes
  file:
    path: /etc/kubenow/yaml
    state: directory
    mode: 0755

- name: copy gluster Namespace configuration
  become: yes
  copy:
    src: gluster-namespace.yml
    dest: "/etc/kubenow/yaml/gluster-namespace.yml"

- name: copy gluster DaemonSet configuration
  become: yes
  copy:
    src: gluster-daemonset.yml
    dest: "/etc/kubenow/yaml/gluster-daemonset.yml"

- name: create gluster Namespace
  command: >
    kubectl apply -f
    /etc/kubenow/yaml/gluster-namespace.yml

- name: start gluster DaemonSet
  command: >
    kubectl apply -f
    /etc/kubenow/yaml/gluster-daemonset.yml

- name: wait for gluster DaemonSet to be Running
  command: >
    kubectl get pods
    -o jsonpath='{.items[*].status.phase}'
    --namespace=gluster
  register: get_phase
  until: get_phase.stdout | match('^(Running\s)*Running$')
  # Wait for 10 minutes
  retries: 120
  delay: 5

- name: retrieve gluster-server pod name
  command: >
    kubectl get pods
    -o jsonpath='{.items[0].metadata.name}'
    --namespace=gluster
  register: get_name

- name: retrieve gluster-server IPs
  command: >
    kubectl get pods
    -o jsonpath='{.items[*].status.podIP}'
    --namespace=gluster
  register: get_ips

- set_fact:
    enpoint_list: "[\"{{get_ips.stdout | replace(' ','\",\"')}}\"]"

- name: "peer probe"
  command: >
    kubectl exec --namespace gluster {{get_name.stdout}}
    gluster peer probe {{item}}
  with_items: "{{enpoint_list}}"
