#!/bin/bash

# Exit if a command exits with a non-zero status
set -e

host_cloud="$1"

# Clone and copy contents of plugin-repo if plugin-repo is specified
if [ -n "$KN_PLUGIN_REPO" ]; then
  echo "Clone plugin repo: $KN_PLUGIN_REPO"
  plugin_dir="/opt/KubeNow/plugins/$KN_PLUGIN_NAME"
  mkdir -p "$plugin_dir"
  git clone "$KN_PLUGIN_REPO" "$plugin_dir"
  echo "Clone plugin repo done"
fi

if [ -n "$KN_PLUGIN_REPO_BRANCH" ]; then
  git -C "/opt/KubeNow/plugins/$KN_PLUGIN_NAME" checkout "$KN_PLUGIN_REPO_BRANCH"
fi

# Set template dir name
if [ -n "$KN_PLUGIN_NAME" ]; then
  echo "Using plugin configuration: $KN_PLUGIN_NAME"
  template_dir="plugins/$KN_PLUGIN_NAME/templates"
else
  template_dir="templates"
fi

echo "Initializing deployment directory for cloud provider $host_cloud"

# Copy template files to init dir
cp "/opt/KubeNow/$template_dir/config.tfvars.$host_cloud"* "/KubeNow_root/"
cp "/opt/KubeNow/$template_dir/inventory"*"-template" "/KubeNow_root/"

# If there is only one config file - then rename template to config.tfvars
if [ -f "/KubeNow_root/config.tfvars.$host_cloud-template" ]; then
  mv "/KubeNow_root/config.tfvars.$host_cloud-template" "/KubeNow_root/config.tfvars"
fi

# Copy config, scripts and other files
cp -r "/opt/KubeNow/$host_cloud" "/KubeNow_root/"
cp -r "/opt/KubeNow/common" "/KubeNow_root/"
cp -r "/opt/KubeNow/bootstrap" "/KubeNow_root/"
cp -r "/opt/KubeNow/bin" "/KubeNow_root/"
cp -r "/opt/KubeNow/playbooks" "/KubeNow_root/"
cp "/opt/KubeNow/ansible.cfg" "/KubeNow_root/"
if [ -d "/opt/KubeNow/plugins" ]; then
  cp -r "/opt/KubeNow/plugins" "/KubeNow_root/"
fi

# Generate and write kubetoken in all config files
tokenID=$(openssl rand -hex 3)
tokenVal=$(openssl rand -hex 8)
token="$tokenID.$tokenVal"
sed -i "s/your-kubeadm-token/${token}/g" config.tfvars*

# Write provisioner in all config files
sed -i "s|provisioner-image-name-autogenerated|${KN_PROVISIONERS_IMG}|g" config.tfvars*

# Generate SSH keys
ssh-keygen -t rsa -N '' -f ssh_key
